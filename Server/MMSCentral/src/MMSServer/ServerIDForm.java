

package MMSServer;

import java.io.File;

 class ServerIDForm extends javax.swing.JFrame {
    
    private static boolean Loading=false;
     
    public ServerIDForm() {
      
    }
      public boolean isLoading()
    {
        return Loading;
    }
    
    public void init()
    {
          Loading=true; 
          initComponents();
          
          ServerIDFile serveridfile=new ServerIDFile();
          ReadFile rf=new ReadFile("./System/serverid.mms",serveridfile.Get_ServerIDFile_Size());
          if(rf.NumOfRecords()>0)
          {
             serveridfile.Set_ServerIDFile_Bytes(rf.Read(1));
              txt_serverid.setText(String.valueOf(serveridfile.Get_ServerID()));
              txt_servername.setText(serveridfile.Get_ServerName_No_Space());
              txt_imagepath.setText(serveridfile.Get_ImagePath());
              txt_soundpath.setText(serveridfile.Get_SoundPath());
              txt_videopath.setText(serveridfile.Get_VideoPath());
              rf.Close();
          }
         
         
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        txt_serverid = new java.awt.TextField();
        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        txt_servername = new java.awt.TextField();
        label3 = new java.awt.Label();
        txt_imagepath = new java.awt.TextField();
        btn_save = new java.awt.Button();
        btn_cancel = new java.awt.Button();
        txt_alert = new java.awt.Label();
        txt_soundpath = new java.awt.TextField();
        txt_videopath = new java.awt.TextField();
        label4 = new java.awt.Label();
        label5 = new java.awt.Label();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        setTitle("Server ID");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        txt_serverid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_serveridKeyTyped(evt);
            }
        });

        getContentPane().add(txt_serverid, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, 60, -1));

        label1.setText("Server ID");
        getContentPane().add(label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 110, -1));

        label2.setText("Server Name");
        getContentPane().add(label2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, -1, -1));

        txt_servername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_servernameActionPerformed(evt);
            }
        });
        txt_servername.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_servernameKeyTyped(evt);
            }
        });

        getContentPane().add(txt_servername, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 370, 40));

        label3.setText("Path of external application for images");
        getContentPane().add(label3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, -1, -1));

        txt_imagepath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_imagepathActionPerformed(evt);
            }
        });
        txt_imagepath.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_imagepathKeyTyped(evt);
            }
        });

        getContentPane().add(txt_imagepath, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 370, 70));

        btn_save.setLabel("Save");
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });

        getContentPane().add(btn_save, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 500, 90, -1));

        btn_cancel.setLabel("Cancel");
        btn_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelActionPerformed(evt);
            }
        });

        getContentPane().add(btn_cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 500, 90, -1));

        txt_alert.setForeground(new java.awt.Color(255, 51, 0));
        getContentPane().add(txt_alert, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 380, 90));

        txt_soundpath.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_soundpathKeyTyped(evt);
            }
        });

        getContentPane().add(txt_soundpath, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 370, 70));

        txt_videopath.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_videopathKeyTyped(evt);
            }
        });

        getContentPane().add(txt_videopath, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, 370, 70));

        label4.setText("Path of external application for sounds");
        getContentPane().add(label4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, -1, -1));

        label5.setText("Path of external application for video");
        getContentPane().add(label5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, -1, -1));

        pack();
    }//GEN-END:initComponents

    private void txt_imagepathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_imagepathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_imagepathActionPerformed

    private void txt_videopathKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_videopathKeyTyped
       checkchar(evt,false,true,false,txt_videopath,500);
    }//GEN-LAST:event_txt_videopathKeyTyped

    private void txt_soundpathKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_soundpathKeyTyped
      checkchar(evt,false,true,false,txt_soundpath,500);
    }//GEN-LAST:event_txt_soundpathKeyTyped

    private void txt_servernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_servernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_servernameActionPerformed

    private void txt_imagepathKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_imagepathKeyTyped
         checkchar(evt,false,true,false,txt_imagepath,500);
    }//GEN-LAST:event_txt_imagepathKeyTyped

    private void txt_servernameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_servernameKeyTyped
       checkchar(evt,true,false,false,txt_servername,200);
    }//GEN-LAST:event_txt_servernameKeyTyped

    private void txt_serveridKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_serveridKeyTyped
        checkchar(evt,true,false,true,txt_serverid,3);
    }//GEN-LAST:event_txt_serveridKeyTyped

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
       try
       {
         if(Byte.parseByte(txt_serverid.getText())>0 && txt_servername.getText().compareTo("")!=0 && txt_imagepath.getText().compareTo("")!=0 && txt_soundpath.getText().compareTo("")!=0 && txt_videopath.getText().compareTo("")!=0)
         {
           txt_alert.setText("");
           File myfile=new File("./System/serverid.mms");
            myfile.delete();
            ServerIDFile serveridfile=new ServerIDFile();
            serveridfile.Set_ServerID(Byte.parseByte(txt_serverid.getText()));
            serveridfile.Set_ServerName(txt_servername.getText());
            serveridfile.Set_ImageApp(txt_imagepath.getText());
            serveridfile.Set_SoundApp(txt_soundpath.getText());
	    serveridfile.Set_VideoApp(txt_videopath.getText());
            WriteFile wf=new WriteFile("./System/serverid.mms");
            wf.Write(serveridfile.Get_ServerIDFile_Bytes());
            wf.Close();
            Loading=false;
            this.hide();
            this.disable();
        }
         else
        {
           txt_alert.setText("Server ID must be number between 1-255, Server Name and External perocess path  can not be null");
        }
      }
      catch(Exception e)
      {
           txt_alert.setText("Server ID must be number between 1-255, Server Name and External perocess path  can not be null");
      }
    }//GEN-LAST:event_btn_saveActionPerformed

    private void btn_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelActionPerformed
        Loading=false;
        this.hide();
        this.disable();
    }//GEN-LAST:event_btn_cancelActionPerformed
    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm
    
      private void checkchar(java.awt.event.KeyEvent evt,boolean NoSpace,boolean slash,boolean OnlyNumber,java.awt.TextField textfield,int MaxNumOfChar)
    {
      if(textfield.getText().length()>=MaxNumOfChar)
      {     
         if( evt.getKeyChar()!='')
         {
            char Null;
            Null=Character.NON_SPACING_MARK;
            evt.setKeyChar(Null);
         }
      }
    
     
      if(OnlyNumber)
      {
           
          if(!Character.isDigit(evt.getKeyChar()))
          {
              if( evt.getKeyChar()!='')
              {
                char Null;
                Null=Character.NON_SPACING_MARK;
                evt.setKeyChar(Null);
              }
          }
      }
      else
      {
         if(slash)
         {
                if( evt.getKeyChar()!='/')
                {
                    if( evt.getKeyChar()!='.')
                    {  
                        if( evt.getKeyCode()==evt.VK_SPACE && NoSpace)
                        {
                            if(!Character.isLetter(evt.getKeyChar()) && !Character.isDigit(evt.getKeyChar()))
                            {
                                if( evt.getKeyChar()!='')
                                {
                                    char Null;
                                     Null=Character.NON_SPACING_MARK;
                                    evt.setKeyChar(Null);
                                }
                            }
                         }
                    }
                }
         }
         else
         {
              if(!Character.isLetter(evt.getKeyChar()) && !Character.isDigit(evt.getKeyChar()))
                    {
                        if( evt.getKeyChar()!='')
                        {
                            char Null;
                            Null=Character.NON_SPACING_MARK;
                            evt.setKeyChar(Null);
                        }
                    }
         }
   }
 }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button btn_cancel;
    private java.awt.Button btn_save;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private java.awt.Label label4;
    private java.awt.Label label5;
    private java.awt.Label txt_alert;
    private java.awt.TextField txt_imagepath;
    private java.awt.TextField txt_serverid;
    private java.awt.TextField txt_servername;
    private java.awt.TextField txt_soundpath;
    private java.awt.TextField txt_videopath;
    // End of variables declaration//GEN-END:variables
    
}
